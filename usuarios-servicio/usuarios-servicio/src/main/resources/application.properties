# Nombre de la aplicación que se mostrará en Eureka
spring.application.name=usuarios-servicio

# Puerto en el que correrá este microservicio (diferente de Eureka!)
server.port=8081

# --- Configuración del Cliente Eureka ---
# URL donde encontrar el servidor Eureka. Debe coincidir con la configuración de eureka-server
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
# Es buena idea que el cliente envíe su "latido" (heartbeat) a Eureka más seguido en desarrollo
eureka.instance.lease-renewal-interval-in-seconds=10
eureka.instance.lease-expiration-duration-in-seconds=30

# --- Configuración de MongoDB ---
# URI de conexión a MongoDB. Usaremos la default por ahora.
# Más adelante, cuando usemos Docker Compose, esto podría cambiar.
spring.data.mongodb.uri=mongodb://localhost:27017/usuarios_db
# Alternativamente, puedes configurar por separado:
# spring.data.mongodb.host=localhost
# spring.data.mongodb.port=27017
# spring.data.mongodb.database=usuarios_db

# --- Configuración de Actuator ---
# Exponer endpoints de health, info y metrics (útil para monitoreo [source: 13, 14])
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=always
# Para que la info de Actuator sea accesible via web (ej: /actuator/health)
management.server.port=8081
